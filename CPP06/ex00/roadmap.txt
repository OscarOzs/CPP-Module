Le but est de faire un programme utilisant les parametre du main.
Cette chaine de caractere doit etre convertit de sa forme de base (char *) a son type correspondant
et afficher sa valeur dans ces 4 types suivant :
- int
- char
- float (-inff, +inff, nanf)
- double (-inf, +inf, nan)

- A GERER : input = -2147483648.f -> input invalid

ROAD MAP :
- verifier si la string envoye est valide + parsing (afficher un msg le cas echeant)
- la convertir en son type reel
- convertir ce type dans tout les autres types
- fill le tableau
- print le tab de string

Les cas a gerer pour l'affichage :
- Char -> float : ajouter un ".0f".
- Char -> double : ajouter un ".0".
- Int -> float : ajouter un ".0f"
- Int -> double : ajouter un ".0".
- le Char doit etre entre single quote.

Les cas a gerer pour les conversions invalides :
- Int -> Char en dehors de range ascii.
- Double -> float en dehors de range float.

_______________________________________________________________________
PARSING :

Distinction de chaque type :
- char :
	- len de 1 et different d'un digit
- float :
	- doit posseder 'f' a len - 1
- double : 
	- doit avoir un '.'
- int :
	- si checker int return true -> return true
else :
	- return false


A Checker dans chaque type :
- int :
	- if (str[i] == "+-") -> i++ -> min_len = 2 ekse min_len = 1
	- if min_len < str_len == false
	- si le reste pas digit jusqu'a str_len - 1 == false
	- si nombre en range INTMAX INTMIN
- float :
	- if (str[i] == "+-") -> i++ -> min_len = 4;
		else min_len = 3;
	- if min_len < str_len return false
	- si il n'y a pas au moins 1 '.' return false
	- check si il y a plusieurs '.' ou 'f' dans str -> return false
	- if str[i] == '.' -> if (*1 checkDotFirstFloat() == false) return false
	- loop sur str[i]
		- si str[i] == '.' -> if (*2 checkDotFloat() == false) return false
- double :
	- si (str[i] == "+-") -> i++ -> min_len = 3 else min_len = 2
	- if min_len < str_len return false
	- si il n'y a pas au moins 1 '.' return false
	- check si il y a plusieurs '.' -> return false
	- if (str[i] == '.' -> if (*3 checkDotFirstDouble() == false) return false
	- loop sur str[i]
		si str[i] == '.' -> if (*4 checkDotDouble() == false) return false


*1 checkDotFirstFloat :
	si str[i + 1] n'est pas digit return false
*2 checkDotFloat :
	si str[i - 1] n'est pas digit return false
	si str[i + 1] n'est ni digit ni == 'f' return false

*3 CheckDotFirstDouble :
	si str[i + 1] n'est pas digit return false
*4 CheckDotDouble :
	si str[i + 1] n'est pas digit return false
	si str[i - 1] n'est pas digit return false

